package project

import (
	"fmt"
	"github.com/ryuuzake/htmx-list-detail-view/model"
	"github.com/ryuuzake/htmx-list-detail-view/view/layout"
)

func projectUrl(id string) string {
	return fmt.Sprintf("%s%s", "/project/", id)
}

func projectTarget(id string) string {
	return fmt.Sprintf("click target:#%s", id)
}

func projectXData(id string) string {
	return fmt.Sprintf("{ id: \"%s\" }", id)
}

templ ProjectView(projects []*model.ProjectList, project *model.Project, isShowDetail bool) {
	@layout.Base() {
		<div class="flex h-screen flex-1 flex-row">
			<div
				x-data="{
					activeAccordions: [],
					setActiveAccordion(id) {
						if (this.activeAccordions.includes(id)) {
							this.activeAccordions = this.activeAccordions.filter(item => item !== id);
						} else {
							this.activeAccordions.push(id);
						}
					},
					isAccordionActive(id) {
						return this.activeAccordions.includes(id);
					}
				}"
				class="w-64 flex-none"
			>
				@ProjectMasterView(projects)
			</div>
			<div class="inline-block w-0.5 flex-none self-stretch bg-slate-300"></div>
			<main id="detail" class="flex-1">
				if isShowDetail {
					@ProjectDetailView(project)
				} else {
					<p>Silahkan Pilih Project</p>
				}
			</main>
		</div>
	}
}

templ ProjectDetailView(project *model.Project) {
	<div class="p-4">
		<span class="rounded-full bg-black px-2.5 py-0.5 text-xs font-semibold text-white">{ project.Type }</span>
		<h3>{ project.Name }</h3>
	</div>
}

templ ProjectMasterView(projects []*model.ProjectList) {
	for _, project := range projects {
		@ProjectItem(project)
	}
}

templ ProjectItem(project *model.ProjectList) {
	<div
		x-data={ projectXData(project.Id) }
		:class="{ 'text-neutral-800' : isAccordionActive(id), 'text-neutral-600 hover:text-neutral-800' : !isAccordionActive(id) }"
		class="group cursor-pointer rounded-md duration-200 ease-out"
		x-cloak
	>
		<button
			id={ project.Id }
			x-on:htmx:before-on-load="setActiveAccordion(id)"
			class="flex w-full select-none items-center justify-between px-5 py-4 text-left font-semibold hover:bg-slate-300 focus:bg-slate-900 focus:text-white active:text-white"
			hx-get={ projectUrl(project.Id) }
			hx-trigger="click"
			hx-target="#detail"
			hx-push-url="true"
			hx-ext="debug"
		>
			<span>{ project.Name }</span>
			if len(project.Children) != 0 {
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="2.5"
					stroke="currentColor"
					class="h-4 w-4 duration-300 ease-out"
					:class="{ 'rotate-90': isAccordionActive(id) }"
				>
					<path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5"></path>
				</svg>
			}
		</button>
		if len(project.Children) != 0 {
			<div x-show="isAccordionActive(id)" x-collapse x-cloak>
				<div class="pl-5 pt-0">
					for _, project := range project.Children {
						@ProjectItem(project)
					}
				</div>
			</div>
		}
	</div>
}
